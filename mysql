一、引擎种类
1.InnoDB
（1）数据存储在表空间（tablespace）中，表空间是由InnoDB管理的一个黑盒子，由一系列的数据文件组成
（2）采用MVCC来支持高并发，并且实现了四个标准的隔离级别，其默认级别是repeatable read（可重复读），并且通过间隙锁（next-key-locking）策略防止幻读的出现
（3）InnoDB表基于聚簇索引建立的，
（4）支持事务
2.MyISAM
（1）不支持事务和行级锁，不支持崩溃后的安全恢复

二、MySQL中explain的用法及查看使用了哪些索引
1.EXPLAIN的使用方法：
在select语句前加上explain就可以了。
2.EXPLAIN列的解释：
table：显示这一行的数据是关于哪张表的
type：这是重要的列，显示连接使用了何种类型。从最好到最差的连接类型为const、eq_reg、ref、range、 indexhe和ALL
possible_keys：显示可能应用在这张表中的索引。如果为空，没有可能的索引。可以为相关的域从WHERE语句中选择一个合适的语句
key： 实际使用的索引。如果为NULL，则没有使用索引。很少的情况下，MYSQL会选择优化不足的索引。这种情况下，可以在SELECT语句中使用USE INDEX（indexname）来强制使用一个索引或者用IGNORE INDEX（indexname）来强制MYSQL忽略索引
key_len：使用的索引的长度。在不损失精确性的情况下，长度越短越好
ref：显示索引的哪一列被使用了，如果可能的话，是一个常数
rows：MYSQL认为必须检查的用来返回请求数据的行数
Extra：关于MYSQL如何解析查询的额外信息。坏的例子是Using temporary和Using filesort，意思MYSQL根本不能使用索引，结果是检索会很慢

三、水平分表
数据库分表可以解决单表海量数据的查询性能问题，分库可以解决单台数据库的并发访问压力问题。
分为水平分表和垂直分表
水平分表原理
分表策略通常是用户ID取模，如果不是整数，可以首先将其进行hash获取到整。
水平分表遇到的问题
1. 跨表直接连接查询无法进行 
2. 我们需要统计数据的时候 
3. 如果数据持续增长，达到现有分表的瓶颈，需要增加分表，此时会出现数据重新排列的情况
